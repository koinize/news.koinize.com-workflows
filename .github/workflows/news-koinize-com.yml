# This is a basic workflow to help you get started with Actions

name: news.koinize.com

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
    paths:
      - 'data/**'
  pull_request:
    branches: [ main1 ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2
        with:
            repository: koinize/news.koinize.com
            token: ${{ secrets.REPO_TOKEN }}
            submodules: true  # Fetch Hugo themes
            fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

      - name: Install dependencies
        run: npm install
        
      - name: Generate Markdown files
        run: node scripts/generateUniqueMDFiles.js
        
      - name: Commit and push files
        run: |
          if ! git config --local user.email "actions@github.com"; then
            echo "Failed to configure Git. Probably, there are NO news to commit."
            exit 1
          fi
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Added generated MD files"
          git push

      # Sets up the latest version of Hugo
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
            hugo-version: 'latest'
            
      # Also specifies the theme we want to use
      - name: Build
        run: hugo --minify
        
      - name: Deploy news.koinize.com to S3
        run: hugo deploy --target "Production" --maxDeletes -1 --force
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.KOINIZE_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.KOINIZE_SECRET_ACCESS }}
      
      # Invalidate Cloudfront Home Page
      - name: invalidate
        uses: chetan/invalidate-cloudfront-action@master
        env:
          DISTRIBUTION: ${{ secrets.AWS_NEWS_KOINIZE_DISTRIBUTION_ID }}
          PATHS: /*
          AWS_REGION: 'us-west-2'
          AWS_ACCESS_KEY_ID: ${{ secrets.KOINIZE_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.KOINIZE_SECRET_ACCESS }}
