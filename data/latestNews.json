[
  {
    "source": "Cointelegraph",
    "date": "2023-10-29T15:30:00.000Z",
    "title": "What are open-source protocols, and how do they work?",
    "url": "http://cointelegraph.com/explained/what-are-open-source-protocols-and-how-do-they-work",
    "description": "\n                \n                    <p style=\"float:right; margin:0 0 10px 15px; width:240px;\"><img src=\"https://images.cointelegraph.com/cdn-cgi/image/format=auto,onerror=redirect,quality=90,width=840/https://s3.cointelegraph.com/storage/uploads/view/b92ade9f5ce29ddea0757ac8ddfbbc89.jpg\" class=\"type:primaryImage\"></p>\n                    \n                    <p>Open-source protocols have numerous advantages over proprietary protocols. They include greater transparency and accessibility.</p>\n                    <p><div data-ct-widget=\"explained-block\" id=\"explained-block-118929-3\">            <h2 data-ct-widget=\"explained-block-title\">                Understanding open-source protocols            </h2>            <p data-ct-widget=\"explained-block-content\">                <p><em>Open-source protocols have become a mainstay in the tech world and are gaining traction due to the myriad benefits that they offer over their proprietary counterparts.</em></p><p>The protocols are typically created with the intention of being used by the public, enabling anyone to examine, alter and share their code. The benefits of <a href=\"https://cointelegraph.com/news/the-importance-of-open-source-in-computer-science-and-software-development\">open-source protocols</a> are multifaceted, ranging from their inherent transparency to their wider accessibility. </p><p>Additionally, they rely on peer evaluations, a cost-effective and inclusive model that distinguishes them from their proprietary counterparts. Prominent examples of open-source software include widely used <a href=\"https://cointelegraph.com/news/what-is-an-operating-system\">operating systems</a> such as Linux and Android and the popular Firefox web browser. </p><p>When it comes to open-source cryptographic protocols, the <a href=\"https://cointelegraph.com/learn/what-is-bitcoin-a-beginners-guide-to-the-worlds-first-cryptocurrency\">Bitcoin</a>, <a href=\"https://cointelegraph.com/learn/what-is-ethereum-a-beginners-guide-to-eth-cryptocurrency\">Ethereum</a>, <a href=\"https://cointelegraph.com/learn/a-beginners-guide-to-the-cardano-network-and-the-ada-ecosystem\">Cardano</a> and <a href=\"https://cointelegraph.com/learn/what-is-polkadot-dot-a-beginners-guide-to-the-decentralized-web-3-0-blockchain\">Polkadot</a> networks stand out as noteworthy <a href=\"https://cointelegraph.com/learn/how-does-blockchain-work-everything-there-is-to-know\">blockchain</a> protocol exemplars, among others.</p><h3>Open-source vs. proprietary protocols</h3><p>Open-source and proprietary protocols represent two distinct approaches to protocol development, each with its own set of principles when it comes to protocol implementation. </p><p>The following is a dissection of their key disparities: </p><p><img alt=\"Open-source protocols vs proprietary protocols\" src=\"https://s3.cointelegraph.com/storage/uploads/view/76d8bd98aadc187722162565f43f1a62.png\" title=\"Open-source protocols vs proprietary protocols\"></p>            </p>        </div>                    <div data-ct-widget=\"explained-block\" id=\"explained-block-118929-2\">            <h2 data-ct-widget=\"explained-block-title\">                What’s the development process for open-source protocols?            </h2>            <p data-ct-widget=\"explained-block-content\">                <p><em>The development of open-source protocols involves several distinct phases, each integral to a protocol’s evolution. It all starts with the conceptualization phase, where developers lay the foundation that defines the protocol’s standards and purpose.</em></p><p>Usually, the basic concept is based on an existing protocol with some enhancements. The conceptualization stage acts as the bedrock, upon which developers meticulously outline the architecture and features, forming a robust theoretical foundation. In this phase, developers chart out a well-defined roadmap, akin to a strategic plan, guiding the project’s trajectory.</p><p>The subsequent step in the development process is usually the prototyping stage. In this stage, developers create a functional model of the protocol that includes the key proposed features. The prototype is usually made accessible to the public as the beta version.</p><p>Releasing the beta version subjects the software to real-world scenarios and user interactions, allowing developers to discern its strengths and weaknesses. The stage also allows developers to get feedback from the open-source community regarding potential new features to incorporate before the final protocol is released. Therefore, the stage is aptly referred to as the beta testing or user acceptance testing (UAT) stage.</p><p>Continuous feedback and updating ensure that the protocol remains responsive to the evolving needs and expectations of its user base. After relevant protocol upgrades are implemented to resolve many of the known stability and reliability issues, the protocol reaches a level of stability warranting the designation of a “stable release.” The stable release version is usually as reliable as developers can make it.</p><p>However, the process does not culminate in stable releases. Open-source projects require ongoing protocol maintenance. The process usually entails releasing bug fixes, such as security patches, and updating the code for enhanced compatibility.</p>            </p>        </div>                    <div data-ct-widget=\"explained-block\" id=\"explained-block-118929-1\">            <h2 data-ct-widget=\"explained-block-title\">                Are open-source protocols copyrighted?            </h2>            <p data-ct-widget=\"explained-block-content\">                <p><em>When a developer publishes their code as open-source, they are sharing it with the public, allowing others to use, modify and distribute it. However, the act of making the code public doesn’t translate to unrestricted usage.</em></p><p>Copyright laws apply here, just as they do for proprietary software. The laws automatically safeguard any original creative work, including open-source protocols, granting the software creator exclusive rights to control their use and distribution.</p><p>When it comes to open-source protocol licensing, the developer typically attaches a license to it, which acts as a set of guidelines that clearly delineates what’s permissible and what’s off-limits concerning the code.</p><p>Open-source licenses often grant users extensive permissions without needing explicit approval from the original author. That said, there are two main types of open-source licenses: permissive and copyleft. </p><p>A permissive license, sometimes also called a BSD-style or Apache-style license, imposes minimal requirements on how the software can be modified or redistributed. However, projects that use this type of license are obliged to append a warranty disclaimer. A classic example of a permissive license is the MIT License. The license allows anyone to use, modify and distribute the code without prior consent.</p><p>Projects utilizing MIT-licensed code typically must incorporate the original copyright notice and a disclaimer explicitly stating that the software comes without any warranty. The disclaimer clarifies that the copyright holders bear no responsibility for any claims or liabilities stemming from the software’s use.</p><p>The license is exceedingly permissive and is crafted to offer maximum freedom to developers, even permitting the code’s inclusion and distribution in commercial products.</p><p>Regarding copyleft licenses, projects that use them are also required to affix a liability disclaimer. They come with more restrictions, especially concerning the distribution of modified protocol versions. For instance, the copyleft GNU General Public License (GPL), a widely employed open-source license, guarantees that the software remains open and free. Like the MIT License, the GPL mandates a warranty disclaimer.</p><p>Copyleft licenses guarantee that open-source protocols or software can be utilized, tweaked and shared without constraints. However, any modified work must adhere to the same terms, preserving the protocol’s openness in all future versions.</p><p>When it comes to proprietary protocols, the landscape changes dramatically. The protocols impose stringent limitations on their protocol documentation, which often include restrictions on modifying or reverse-engineering the code.</p><p>To uphold protocol security, proprietary projects usually include confidentiality clauses in their licenses, preventing users from disclosing their protocols’ workings or any proprietary information they might come across.</p><p>In terms of cost, permissive and copyleft licenses are free, allowing users to use and distribute the software without charge. In contrast, proprietary licenses often require users to pay for access to and use of the software.</p>            </p>        </div>                    <div data-ct-widget=\"explained-block\" id=\"explained-block-118929-0\">            <h2 data-ct-widget=\"explained-block-title\">                The future of open-source protocols            </h2>            <p data-ct-widget=\"explained-block-content\">                <p><em>As the world becomes increasingly digital and interconnected, open-source protocols are poised to play a key role in enabling innovation, especially when it comes to supporting interoperability among different systems, applications and devices.</em></p><p>The shift is driven by the widespread, concurrent utilization of protocols crafted by different developers on an everyday basis. As a result, open-source protocols, especially those that allow alterations by third parties and support interoperable systems, are bound to take center stage in the new technological frontier.</p><p>Going by current trends, open-source projects are also likely to focus on sustainability, energy efficiency and problem-solving in alignment with the global push for eco-friendly technological solutions.</p>Furthermore, open-source networking protocol initiatives are expected to continue developing peer-to-peer (P2P) internet protocols. The protocols facilitate direct communication between systems, eliminating the need for centralized intermediary systems. P2P protocols boast an expanding array of applications, particularly in enabling <a href=\"https://cointelegraph.com/news/what-are-peer-to-peer-payments-and-how-can-they-work-offline\">P2P transactions</a> and communications through decentralized protocols.            </p>        </div>    </p>\n                \n            "
  },
  {
    "source": "Cryptopolitan",
    "date": "2023-10-29T15:34:31.000Z",
    "title": "Nightshade Emerges as a Weapon Against AI Copyright Infringement",
    "url": "https://www.cryptopolitan.com/nightshade-against-ai-copyright-infringement/",
    "description": "In the ever-evolving landscape of artificial intelligence (AI), a new player emerges on the scene: Nightshade. In response to the escalating tensions between AI developers and creators regarding alleged copyright breaches, researchers at the University of Chicago have unveiled a potent tool aimed at protecting the intellectual property rights of digital artists. Nightshade&#8217;s powerful impact ... <a title=\"Nightshade Emerges as a Weapon Against AI Copyright Infringement\" class=\"read-more\" href=\"https://www.cryptopolitan.com/nightshade-against-ai-copyright-infringement/\" aria-label=\"More on Nightshade Emerges as a Weapon Against AI Copyright Infringement\">Read more</a>"
  }
]